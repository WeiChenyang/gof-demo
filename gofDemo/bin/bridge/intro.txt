桥接模式总结：
	1、将抽象部分与它的实现部分分离，使它们都可以独立地变化。
	2、将抽象和行为划分开来，各自独立，但能动态的结合。
	3、你不希望在抽象和它的实现部分之间有一个固定的绑定关系。 例如这种情况可能是因为，在程序运行时刻实现部分应可以被选择或者切换。
	       类的抽象以及它的实现都应该可以通过生成子类的方法加以扩充。 这时Bridge模式使你可以对不同的抽象接口和实现部分进行组合，并分别对它们进行扩充。 
	       对一个抽象的实现部分的修改应对客户不产生影响，即客户的代码不必重新编译。 
	       正如在意图一节的第一个类图中所示的那样，有许多类要生成。 这样一种类层次结构说明你必须将一个对象分解成两个部分。 
	       你想在多个对象间共享实现（可能使用引用计数），但同时要求客户并不知道这一点

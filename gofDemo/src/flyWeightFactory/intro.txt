享元模式总结：
	1、内存属于稀缺资源，不能随意浪费。如果在一个系统中有很多个完全相同或相似的对象，我们就可以使用享元模式，
		让他们共享一份内存即可，不必每个都去实例化对象，从而节省内存空间。
	2、享元模式以共享的方式高效的支持大量细粒度对象的重用。
		享元对象能做到共享的关键是区分了内部状态和外部状态。 
		内部状态：可以共享，不会随环境改变而改变。
		外部状态：不可以共享，会随环境改变而改变。
	3、在JAVA语言中，String类型就是使用了享元模式。String对象是final类型，对象一旦创建就不可改变。在JAVA中字符串常量都是存在常量池中的，
		JAVA会确保一个字符串常量在常量池中只有一个拷贝。String a=”abc”，其中”abc”就是一个字符串常量。
	4、优点：
		极大减少内存中对象的数量。
		相同或相似的对象内存只保持一份，极大的节约资源，提高系统性能。
		外部状态相对独立，不影响内部变化。
	       缺点：
		模式较复杂，使程序逻辑复杂化。
		为了节省内存，共享了内部状态，分离出了外部状态，而读取外部状态使运行时间变长。用时间换空间。